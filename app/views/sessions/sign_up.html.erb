<section class="sign-in-">
  <div class="container mt-5 p-0 bg-white">
    <div class="row no-gutters">
      <div class="col-sm-6 align-self-center">
        <div class="sign-in-from">
          <h1 class="mb-0">Sign Up</h1>
          <%= form_with(model: @user, url: new_user_path, local: true) do |f| %>
            <input name="register" hidden="hidden">
            <div class="form-group">
              <label for="full_name">Your Full Name <span style="color: red">*</span></label>
              <%= f.text_field :full_name, class: "form-control mb-0", placeholder: "Your Full Name", required: true %>
            </div>
            <div class="form-group">
              <label for="username">User Name <span style="color: red">*</span></label>
              <%= f.text_field :user_name, class: "form-control mb-0", placeholder: "Your User Name", required: true %>
            </div>
            <div class="form-group">
              <label for="email">Email address <span style="color: red">*</span></label>
              <%= f.email_field :email, class: "form-control mb-0", placeholder: "Enter email", required: true %>
            </div>
            <div class="form-group">
              <label for="country">Country <span style="color: red">*</span></label>
              <select class="form-control mb-0" name="country" id="country-selector" required>
                <!-- Populate with JavaScript or static list of countries -->
              </select>
            </div>
            <div class="form-group">
              <label for="mobile">Mobile <span style="color: red">*</span></label>
              <input type="tel" class="form-control mb-0" id="mobile" name="mobile_with_country_code" placeholder="Enter Mobile" required>
            </div>
            <div class="form-group">
              <label for="password">Password <span style="color: red">*</span></label>
              <%= f.password_field :password, class: "form-control mb-0", placeholder: "Password", required: true %>
            </div>
            <div class="form-group">
              <label for="referral_id">Referral ID</label>
              <%= f.text_field :referral_id, class: "form-control mb-0", placeholder: "Referral ID (Optional)", id: "referral-id" %>
            </div>

            <div class="d-inline-block w-100">
              <div class="custom-control custom-checkbox d-inline-block mt-2 pt-1">
                <input type="checkbox" class="custom-control-input" id="customCheck1" required>
                <label class="custom-control-label" for="customCheck1">I accept <a href="#">Terms and Conditions</a></label>
              </div>
              <button type="submit" class="btn btn-primary float-right">Sign Up</button>
            </div>
          <% end %>
            <div class="sign-info">
              <span class="dark-color d-inline-block line-height-2">Already Have Account ? <a href="<%= login_path %>">Log In</a></span>
            </div>
          </form>
        </div>
      </div>
      <div class="col-sm-6 text-center">
        <div class="sign-in-detail text-white">
          <a class="sign-in-logo mb-5" href="#"></a>
          <div class="slick-slider11">
            <div class="item">
              <h4 class="mb-1 text-white">Manage your orders</h4>
              <p>It is a long established fact that a reader will be distracted by the readable content.</p>
            </div>
            <div class="item">
              <h4 class="mb-1 text-white">Manage your orders</h4>
              <p>It is a long established fact that a reader will be distracted by the readable content.</p>
            </div>
            <div class="item">
              <h4 class="mb-1 text-white">Manage your orders</h4>
              <p>It is a long established fact that a reader will be distracted by the readable content.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const countrySelector = document.getElementById('country-selector');

        // Fetch the list of countries from the REST Countries API
        fetch('https://restcountries.com/v3.1/all')
            .then(response => response.json())
            .then(data => {
                // Sort countries alphabetically by name
                data.sort((a, b) => a.name.common.localeCompare(b.name.common));

                // Add each country as an option to the dropdown
                data.forEach(country => {
                    const option = document.createElement('option');
                    option.value = country.name.common;
                    option.textContent = country.name.common;
                    countrySelector.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching country data:', error));
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Initialize the intl-tel-input plugin for the mobile input
        var input = document.querySelector("#mobile");
        var iti = window.intlTelInput(input, {
            initialCountry: "auto",
            geoIpLookup: function (success, failure) {
                fetch('https://ipinfo.io', {headers: {'Accept': 'application/json'}})
                    .then(function (resp) { return resp.json(); })
                    .then(function (resp) { success(resp.country); })
                    .catch(function () { success('us'); });
            },
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        // When the form is submitted, append the full number with country code to the input value
        document.querySelector("form").addEventListener("submit", function () {
            var phoneNumber = iti.getNumber();
            input.value = phoneNumber;
        });
    });
    document.addEventListener("DOMContentLoaded", function() {
        // Get the current URL and extract the 'ref' parameter
        const urlParams = new URLSearchParams(window.location.search);
        const referralId = urlParams.get('ref');

        // If the 'ref' parameter exists, set it as the value of the referral ID input
        if (referralId) {
            document.getElementById('referral-id').value = referralId;
        }
    });

</script>