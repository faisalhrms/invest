<section class="sign-in-">
  <div class="container mt-5 p-0 bg-white">
    <div class="row no-gutters">
      <div class="col-sm-6 align-self-center">
        <div class="sign-in-from">
          <h1 class="mb-0">Sign Up</h1>
          <%= form_with(model: @user, url: new_user_path, local: true, id: "registration-form") do |f| %>
            <input name="register" hidden="hidden">
            <div class="form-group">
              <label for="full_name">Your Full Name <span style="color: red">*</span></label>
              <%= f.text_field :full_name, class: "form-control mb-0", placeholder: "Your Full Name", required: true %>
            </div>
            <div class="form-group">
              <label for="username">User Name <span style="color: red">*</span></label>
              <%= f.text_field :user_name, class: "form-control mb-0", placeholder: "Your User Name", required: true %>
            </div>
            <div class="form-group">
              <label for="email">Email address <span style="color: red">*</span></label>
              <%= f.email_field :email, class: "form-control mb-0", placeholder: "Enter email", required: true, pattern: "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$", oninput: "this.value = this.value.toLowerCase()" %>
              <small class="form-text text-muted">Only lowercase letters allowed.</small>
            </div>
            <div class="form-group">
              <label for="country">Country <span style="color: red">*</span></label>
              <select class="form-control mb-0" name="country" id="country-selector" required>
                <option value="">Select Country</option>
              </select>
            </div>
            <div class="form-group">
              <label for="mobile">Mobile <span style="color: red">*</span></label>
              <input type="tel" class="form-control mb-0" id="mobile" name="mobile_with_country_code" placeholder="Enter Mobile" required>
              <small class="text-muted" id="mobile-help">Format: </small>
            </div>
            <div class="form-group">
              <label for="password">Password <span style="color: red">*</span></label>
              <div class="input-group">
                <%= f.password_field :password, class: "form-control mb-0", placeholder: "Password", required: true, id: "password" %>
                <div class="input-group-append">
                  <span class="input-group-text">
                    <i class="fa fa-eye toggle-password" toggle="#password" style="cursor: pointer;"></i>
                  </span>
                </div>
              </div>
            </div>
            <div class="form-group">
              <label for="confirm_password">Confirm Password <span style="color: red">*</span></label>
              <div class="input-group">
                <%= f.password_field :password_confirmation, class: "form-control mb-0", placeholder: "Confirm Password", required: true, id: "confirm_password" %>
                <div class="input-group-append">
                  <span class="input-group-text">
                    <i class="fa fa-eye toggle-password" toggle="#confirm_password" style="cursor: pointer;"></i>
                  </span>
                </div>
              </div>
              <small id="password-match-message" class="text-danger d-none">Passwords do not match!</small>
            </div>
            <div class="form-group">
              <label for="referral_id">Referral ID</label>
              <%= f.text_field :referral_id, class: "form-control mb-0", placeholder: "Referral ID (Optional)", id: "referral-id" %>
            </div>

            <div class="d-inline-block w-100">
              <div class="custom-control custom-checkbox d-inline-block mt-2 pt-1">
                <input type="checkbox" class="custom-control-input" id="customCheck1" required>
                <label class="custom-control-label" for="customCheck1">I accept <a href="#">Terms and Conditions</a></label>
              </div>
              <button type="submit" class="btn btn-primary float-right">Sign Up</button>
            </div>
          <% end %>
          <div class="sign-info">
            <span class="dark-color d-inline-block line-height-2">Already Have Account? <a href="<%= login_path %>">Log In</a></span>
          </div>
        </div>
      </div>
      <div class="col-sm-6 text-center">
        <div class="sign-in-detail text-white">
          <a class="sign-in-logo mb-5" href="#"></a>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Font Awesome CDN for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const countrySelector = document.getElementById('country-selector');
        const mobileInput = document.querySelector("#mobile");
        const mobileHelp = document.getElementById("mobile-help");
        const passwordField = document.getElementById('password');
        const confirmPasswordField = document.getElementById('confirm_password');
        const passwordMatchMessage = document.getElementById('password-match-message');
        let iti = null;

        // Initialize intl-tel-input for the mobile input
        iti = window.intlTelInput(mobileInput, {
            initialCountry: "auto",
            geoIpLookup: function (success, failure) {
                fetch('https://ipinfo.io', {headers: {'Accept': 'application/json'}})
                    .then(resp => resp.json())
                    .then(resp => success(resp.country))
                    .catch(() => success('us'));
            },
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        // Fetch and populate the country dropdown
        fetch('https://restcountries.com/v3.1/all')
            .then(response => response.json())
            .then(data => {
                data.sort((a, b) => a.name.common.localeCompare(b.name.common));
                data.forEach(country => {
                    const option = document.createElement('option');
                    option.value = country.cca2.toLowerCase();
                    option.textContent = country.name.common;
                    countrySelector.appendChild(option);
                });
            });

        // Update intl-tel-input country when dropdown changes
        countrySelector.addEventListener("change", function () {
            iti.setCountry(this.value.toLowerCase());
            updateMobileField();
        });

        // Toggle password visibility
        document.querySelectorAll(".toggle-password").forEach(toggleIcon => {
            toggleIcon.addEventListener("click", function () {
                const input = document.querySelector(this.getAttribute("toggle"));
                input.type = input.type === "password" ? "text" : "password";
                this.classList.toggle("fa-eye-slash");
            });
        });

        // Update maxLength and format for mobile input
        function updateMobileField() {
            const placeholder = iti.getNumberPlaceholder();
            const maxLength = placeholder.replace(/\D/g, '').length;
            mobileInput.maxLength = maxLength;
            mobileHelp.textContent = `Format: ${placeholder} (Max: ${maxLength} digits)`;
        }

        // Check if passwords match and show message
        function validatePasswords() {
            const match = passwordField.value && confirmPasswordField.value && passwordField.value !== confirmPasswordField.value;
            passwordMatchMessage.classList.toggle('d-none', !match);
        }

        // Add event listeners for validation
        passwordField.addEventListener('input', validatePasswords);
        confirmPasswordField.addEventListener('input', validatePasswords);

        mobileInput.addEventListener('countrychange', updateMobileField);
        updateMobileField();
    });
</script>
